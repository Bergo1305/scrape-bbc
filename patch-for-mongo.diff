diff --git a/config.cfg b/config.cfg
new file mode 100644
index 0000000..604ca40
--- /dev/null
+++ b/config.cfg
@@ -0,0 +1,5 @@
+[Mongo]
+url: aws-us-east-1-portal.9.dblayer.com:10650,aws-us-east-1-portal.4.dblayer.com:11181
+username: writey
+password: ilovetowritetehdataz
+dbname: scrape
diff --git a/local_config.cfg b/local_config.cfg
new file mode 100644
index 0000000..3b5017a
--- /dev/null
+++ b/local_config.cfg
@@ -0,0 +1,5 @@
+[Mongo]
+url: localhost:27017
+username:
+password:
+dbname: scrape
diff --git a/scrapymasters/scrapeserver/__init__.py b/scrapymasters/scrapeserver/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/scrapymasters/scrapeserver/server.py b/scrapymasters/scrapeserver/server.py
new file mode 100644
index 0000000..e7880d7
--- /dev/null
+++ b/scrapymasters/scrapeserver/server.py
@@ -0,0 +1,60 @@
+#!/usr/bin/env python
+import web
+# import sys
+# sys.path.insert(0, '/Users/maxwittman/Workspaces/Python/scrapymasters/scrapymasters')
+
+# sys.path.append(path)
+# import sys
+# sys.path.append("..")
+# import scrapymasters.common.ConfigFiles
+# import scrapymasters.common.MongoUtils
+
+# import scrapymasters.common.ConfigFiles
+# import scrapymasters.common.MongoUtils
+
+# from common.ConfigFiles import ConfigFiles
+# from common.MongoUtils import MongoUtils
+
+from scrapymasters.common.ConfigFiles import ConfigFiles
+from scrapymasters.common.MongoUtils import MongoUtils
+
+# from ..common.ConfigFiles import ConfigFiles
+# from ..common.MongoUtils import MongoUtils
+
+# from common.ConfigFiles import ConfigFiles
+# from common.MongoUtils import MongoUtils
+
+urls = (
+    '/articles', 'Articles'
+    # '/users/(.*)', 'get_user'
+)
+
+# def run(self, port=8080, *middleware):
+#         func = self.wsgifunc(*middleware)
+#         return web.httpserver.runsimple(func, ('0.0.0.0', port))
+
+app = web.application(urls, globals())
+
+
+class Articles:
+    def __init__(self):
+        self.config = ConfigFiles.config()
+
+    def GET(self):
+        client = MongoUtils.create_client_from_config(self.config)
+        db = client.scrape
+        articles = db.articles.find()
+        client.close()
+        return articles
+
+    def PUT(self):
+        return "putting articles"
+
+# class get_user:
+#     def GET(self, user):
+# 	for child in root:
+# 		if child.attrib['id'] == user:
+# 		    return str(child.attrib)
+
+if __name__ == "__main__":
+    app.run()
